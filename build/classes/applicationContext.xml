<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.1.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
	http://www.springframework.org/schema/util
	http://www.springframework.org/schema/util/spring-util-4.1.xsd">

	<!-- 指定扫描com.situ.spring包下面所有注解 -->
	<context:component-scan base-package="com.situ.spring" />

	<!-- 1、配置目标对象，加入IOC容器 -->
	<bean name="studentDaoTarget" class="com.situ.spring.dao.impl.StudentDaoImpl"></bean>

	<!-- 2、配置通知（增强）对象，加入IOC容器 -->
	<bean name="myAdvice" class="com.situ.spring.aop.MyAdvice" ></bean>
	
	<!-- 3.将通知myAdvice织入到目标对象"studentDaoTarget" -->
	<aop:config>
		<!-- 配置切入点 -->
		<!-- 
		public void com.situ.spring.dao.impl.StudentDaoImpl.save()
		       void com.situ.spring.dao.impl.StudentDaoImpl.save()  public可以省略
		       * com.situ.spring.dao.impl.StudentDaoImpl.save()     对返回值不做要求，*代表任意返回值
		       * com.situ.spring.dao.impl.StudentDaoImpl.*()        StudentDaoImpl所有方法都增强
		       * com.situ.spring.dao.impl.*DaoImpl.*()              对所有的DaoImpl
			   * com.situ.spring.dao.impl.*DaoImpl.*(..)            ..对方法的参数不做要求(参数为空或者任意多个)
			   * com.situ.spring.dao..*DaoImpl.*()                  dao包下面所有子包都增强
 		 -->
		<aop:pointcut expression="execution(* com.situ.spring.dao.impl.*DaoImpl.*(..))" id="pc"/>
		<!-- 配置切面:切入点+通知 -->
		<aop:aspect ref="myAdvice">
			 <!-- 前置通知:目标方法运行之前调用 -->
		       <aop:before method="before" pointcut-ref="pc"/>
		       <!-- 后置通知(如果出现异常不会调用)在目标方法运行之后调用 -->
		       <aop:after-returning method="afterReturning" pointcut-ref="pc"/>
		       <!-- 环绕通知:在目标方法之前和之后都调用 -->
		       <aop:around method="around" pointcut-ref="pc"/>
		       <!-- 异常通知:如果出现异常,就会调用 -->
		       <aop:after-throwing method="afterException" pointcut-ref="pc"/>
		       <!-- 后置通知:(无论是否出现 异常都会调用)在目标方法运行之后调用 -->
		       <aop:after method="after" pointcut-ref="pc"/>
		</aop:aspect>
	</aop:config>

</beans>
